{"version":3,"sources":["ng://@opten/ng-forms/lib/error-message-for.directive.ts","ng://@opten/ng-forms/lib/forms.module.ts"],"names":["ErrorMessageForDirective","_element","translate","this","dateFormat","prototype","ngAfterViewChecked","_this","_translateSubscription","_message","subscribe","message","nativeElement","innerHTML","ngOnDestroy","unsubscribe","Object","defineProperty","control","propertyName","errors","hasOwnProperty","error","_translate","length","requiredLength","date","formatDate","min","currentLang","max","observableOf","key","params","get","Directive","args","selector","ElementRef","TranslateService","Input","FormsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"2cAAA,IAAAA,EAAA,WA2BC,SAAAA,EACSC,EACAC,GADAC,KAAAF,SAAAA,EACAE,KAAAD,UAAAA,EANDC,KAAAC,WAAa,aAkFtB,OAzECJ,EAAAK,UAAAC,mBAAA,WAAA,IAAAC,EAAAJ,KACCA,KAAKK,uBAAyBL,KAAKM,SAASC,UAAU,SAAAC,GACjDA,GAAsB,MAAXA,IACdJ,EAAKN,SAASW,cAAcC,UAAYF,MAK3CX,EAAAK,UAAAS,YAAA,WAEKX,KAAKK,wBACRL,KAAKK,uBAAuBO,eAI9BC,OAAAC,eAAIjB,EAAAK,UAAA,WAAQ,KAAZ,WACC,GAAIF,KAAKe,QACR,IAAK,IAAMC,KAAgBhB,KAAKe,QAAQE,OACvC,GAAIjB,KAAKe,QAAQE,OAAOC,eAAeF,GAAe,KAC/CG,EAMFnB,KAAKe,QAAQE,OAAOD,GAExB,GAAqB,aAAjBA,EACH,OAAOhB,KAAKoB,WAAW,YACjB,GAAqB,cAAjBJ,EACV,OAAOhB,KAAKoB,WAAW,aAAc,CACpCC,OAAQF,EAAMG,iBAET,GAAqB,cAAjBN,EACV,OAAOhB,KAAKoB,WAAW,aAAc,CACpCC,OAAQF,EAAMG,iBAET,GAAqB,UAAjBN,EACV,OAAOhB,KAAKoB,WAAW,SACjB,GAAqB,QAAjBJ,EACV,OAAOhB,KAAKoB,WAAW,OACjB,GACW,kBAAjBJ,GACiB,qBAAjBA,EAEA,OAAOhB,KAAKoB,WAAW,WAAY,CAClCG,KAAMC,EAAAA,WAAWL,EAAMM,IAAKzB,KAAKC,WAAYD,KAAKD,UAAU2B,eAEvD,GACW,kBAAjBV,GACiB,qBAAjBA,EAEA,OAAOhB,KAAKoB,WAAW,WAAY,CAClCG,KAAMC,EAAAA,WAAWL,EAAMQ,IAAK3B,KAAKC,WAAYD,KAAKD,UAAU2B,eAEvD,GACW,qBAAjBV,GACiB,wBAAjBA,GACiB,oBAAjBA,GACiB,uBAAjBA,EAEA,OAAOhB,KAAKoB,WAAW,QAM3B,OAAOQ,EAAAA,GAAa,uCAGb/B,EAAAK,UAAAkB,WAAR,SAAmBS,EAAaC,GAC/B,OAAO9B,KAAKD,UAAUgC,IAAI,oBAAoBF,EAAOC,wBAxFtDE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,qEAXVC,EAAAA,kBAOQC,EAAAA,qDAQPC,EAAAA,MAAKJ,KAAA,CAAC,0BAqFRpC,EAzGA,GCAAyC,EAAA,WAIA,SAAAA,KAK0B,2BALzBC,EAAAA,SAAQN,KAAA,CAAC,CACTO,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC7C,GACf8C,QAAS,CAAC9C,OAEeyC,EAT1B","sourcesContent":["import {\r\n\tDirective,\r\n\tInput,\r\n\tAfterViewChecked,\r\n\tOnDestroy,\r\n\tElementRef\r\n} from '@angular/core';\r\n\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { Observable, of as observableOf, Subscription } from 'rxjs';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Directive({\r\n\tselector: '[op10ErrorMessageFor]'\r\n})\r\nexport class ErrorMessageForDirective implements AfterViewChecked, OnDestroy {\r\n\r\n\t@Input('op10ErrorMessageFor')\r\n\tcontrol: FormControl;\r\n\r\n\tprivate dateFormat = 'DD.MM.YYYY';\r\n\r\n\tprivate _translateSubscription: Subscription;\r\n\r\n\tconstructor(\r\n\t\tprivate _element: ElementRef,\r\n\t\tprivate translate: TranslateService\r\n\t) {}\r\n\r\n\tngAfterViewChecked() {\r\n\t\tthis._translateSubscription = this._message.subscribe(message => {\r\n\t\t\tif (message && message != null) {\r\n\t\t\t\tthis._element.nativeElement.innerHTML = message;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\t// Das ist ein test\r\n\t\tif (this._translateSubscription) {\r\n\t\t\tthis._translateSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n\tget _message(): Observable<any> {\r\n\t\tif (this.control) {\r\n\t\t\tfor (const propertyName in this.control.errors) {\r\n\t\t\t\tif (this.control.errors.hasOwnProperty(propertyName)) {\r\n\t\t\t\t\tconst error: {\r\n\t\t\t\t\t\tactual: Date;\r\n\t\t\t\t\t\tmin: Date;\r\n\t\t\t\t\t\tmax: Date;\r\n\t\t\t\t\t\tactualLength: number;\r\n\t\t\t\t\t\trequiredLength: number;\r\n\t\t\t\t\t} = this.control.errors[propertyName];\r\n\r\n\t\t\t\t\tif (propertyName === 'required') {\r\n\t\t\t\t\t\treturn this._translate('Required');\r\n\t\t\t\t\t} else if (propertyName === 'minlength') {\r\n\t\t\t\t\t\treturn this._translate('Min Length', {\r\n\t\t\t\t\t\t\tlength: error.requiredLength\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (propertyName === 'maxlength') {\r\n\t\t\t\t\t\treturn this._translate('Max Length', {\r\n\t\t\t\t\t\t\tlength: error.requiredLength\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (propertyName === 'email') {\r\n\t\t\t\t\t\treturn this._translate('Email');\r\n\t\t\t\t\t} else if (propertyName === 'url') {\r\n\t\t\t\t\t\treturn this._translate('Url');\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tpropertyName === 'datepickerMin' ||\r\n\t\t\t\t\t\tpropertyName === 'matDatepickerMin'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn this._translate('Min Date', {\r\n\t\t\t\t\t\t\tdate: formatDate(error.min, this.dateFormat, this.translate.currentLang)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tpropertyName === 'datepickerMax' ||\r\n\t\t\t\t\t\tpropertyName === 'matDatepickerMax'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn this._translate('Max Date', {\r\n\t\t\t\t\t\t\tdate: formatDate(error.max, this.dateFormat, this.translate.currentLang)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tpropertyName === 'datepickerFilter' ||\r\n\t\t\t\t\t\tpropertyName === 'matdatepickerFilter' ||\r\n\t\t\t\t\t\tpropertyName === 'datepickerParse' ||\r\n\t\t\t\t\t\tpropertyName === 'matDatepickerParse'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn this._translate('Date');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn observableOf(null);\r\n\t}\r\n\r\n\tprivate _translate(key: string, params?: Object) {\r\n\t\treturn this.translate.get(`Validation.Field.${key}`, params);\r\n\t}\r\n}\r\n","import { ErrorMessageForDirective } from './error-message-for.directive';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n\timports: [CommonModule],\r\n\tdeclarations: [ErrorMessageForDirective],\r\n\texports: [ErrorMessageForDirective]\r\n})\r\nexport class FormsModule {}\r\n"]}